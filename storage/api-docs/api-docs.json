{
    "openapi": "3.0.0",
    "info": {
        "title": "GYM API Documentation",
        "description": "GYM API Documentation for make connections to your application",
        "contact": {
            "name": "Brenbala",
            "email": ""
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Registers a new user.",
                "operationId": "register",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/register-with-social": {
            "post": {
                "tags": [
                    "Non Password Authentication"
                ],
                "summary": "Register a new user without password",
                "description": "Registers a new user without requiring a password.",
                "operationId": "registerWithoutPass",
                "requestBody": {
                    "description": "User details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "email"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "age": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float",
                                        "nullable": true
                                    },
                                    "weight": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "physicalActivityLevel": {
                                        "type": "integer",
                                        "nullable": true
                                    },
                                    "goals": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "registrationType": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "userType": {
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8,
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Bearer": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login-with-social": {
            "post": {
                "tags": [
                    "Non Password Authentication"
                ],
                "summary": "Login without Password",
                "description": "Login the user without requiring a password.",
                "operationId": "loginWithoutPass",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Bearer": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/api/users/verify": {
            "post": {
                "tags": [
                    "User OTP Verify"
                ],
                "summary": "Verify OTP and Register",
                "description": "Verify OTP and register the user.",
                "operationId": "verifyOtpAndRegister",
                "requestBody": {
                    "description": "User email and OTP",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "otp"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "otp": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Bearer": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/users/password/create": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify Password",
                "description": "Verify and update the user's password.",
                "operationId": "verifyPassword",
                "requestBody": {
                    "description": "User email and new password",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "minLength": 8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Bearer": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Registration successful"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation Error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "description": "Logs in a user.",
                "operationId": "login",
                "requestBody": {
                    "description": "User credentials",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "Bearer": {
                                            "description": "Access token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "402": {
                        "description": "Validation Error"
                    },
                    "403": {
                        "description": "User not found"
                    },
                    "424": {
                        "description": "User not verified"
                    },
                    "422": {
                        "description": "Invalid OTP"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/password/reset": {
            "post": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Reset user password",
                "description": "Resets the user password.",
                "operationId": "resetPassword",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/password/update": {
            "post": {
                "tags": [
                    "Reset Password"
                ],
                "summary": "Update user password",
                "description": "Updates the user's password.",
                "operationId": "updatePassword",
                "requestBody": {
                    "description": "User email, new password, and password confirmation",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "confirmPassword"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/resend-otp": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Resend OTP",
                "description": "Resends the OTP to the user's email.",
                "operationId": "resendOtp",
                "requestBody": {
                    "description": "User email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "New OTP sent successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout",
                "description": "Logs out the authenticated user and revokes access tokens.",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/genders": {
            "get": {
                "tags": [
                    "Genders"
                ],
                "summary": "Get all genders",
                "description": "Returns a list of all genders.",
                "operationId": "getGenders",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/goals": {
            "get": {
                "tags": [
                    "Goals"
                ],
                "summary": "Get all fitness goals",
                "description": "Returns a list of all fitness goals.",
                "operationId": "getGoals",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Get authenticated user details",
                "description": "Returns the details of the authenticated user.",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "email": {
                                            "type": "string",
                                            "format": "email"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/profile/update": {
            "put": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Update user details",
                "description": "Updates the details of the authenticated user.",
                "operationId": "updateUser",
                "requestBody": {
                    "description": "User details to update",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "firstName",
                                    "lastName",
                                    "email",
                                    "phone",
                                    "profilePicture",
                                    "gender",
                                    "age",
                                    "height",
                                    "weight",
                                    "weightType",
                                    "physicalActivityLevel",
                                    "goals",
                                    "newPassword",
                                    "confirmPassword"
                                ],
                                "properties": {
                                    "firstName": {
                                        "type": "string"
                                    },
                                    "lastName": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "type": "string"
                                    },
                                    "profilePicture": {
                                        "type": "string"
                                    },
                                    "gender": {
                                        "type": "integer"
                                    },
                                    "age": {
                                        "type": "integer"
                                    },
                                    "height": {
                                        "type": "number",
                                        "format": "float"
                                    },
                                    "weight": {
                                        "type": "integer"
                                    },
                                    "weightType": {
                                        "type": "integer"
                                    },
                                    "physicalActivityLevel": {
                                        "type": "integer"
                                    },
                                    "goals": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "newPassword": {
                                        "type": "string",
                                        "minLength": 8
                                    },
                                    "confirmPassword": {
                                        "type": "string",
                                        "minLength": 8
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User details updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "firstName": {
                                                    "type": "string"
                                                },
                                                "lastName": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "format": "email"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "profilePicture": {
                                                    "type": "string"
                                                },
                                                "gender": {
                                                    "type": "integer"
                                                },
                                                "age": {
                                                    "type": "integer"
                                                },
                                                "height": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "weight": {
                                                    "type": "integer"
                                                },
                                                "weightType": {
                                                    "type": "integer"
                                                },
                                                "physicalActivityLevel": {
                                                    "type": "integer"
                                                },
                                                "goals": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "integer"
                                                    },
                                                    "nullable": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/upload-profile-picture": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Upload profile picture",
                "description": "Uploads a profile picture for the authenticated user.",
                "operationId": "uploadProfilePicture",
                "requestBody": {
                    "description": "Profile picture to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "profilePicture"
                                ],
                                "properties": {
                                    "profilePicture": {
                                        "description": "Profile picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Profile picture uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "profilePicture": {
                                            "description": "URL of the uploaded profile picture",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/upload-cover-picture": {
            "post": {
                "tags": [
                    "User Profile"
                ],
                "summary": "Upload cover picture",
                "description": "Uploads a cover picture for the authenticated user.",
                "operationId": "uploadCoverPicture",
                "requestBody": {
                    "description": "Cover picture to upload",
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "coverPicture"
                                ],
                                "properties": {
                                    "coverPicture": {
                                        "description": "Cover picture file",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Cover picture uploaded",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "coverPicture": {
                                            "description": "URL of the uploaded cover picture",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/units-of-measurement": {
            "get": {
                "tags": [
                    "Units of Measurement"
                ],
                "summary": "Get all units of measurement",
                "description": "Returns a list of all units of measurement.",
                "operationId": "getUnitsOfMeasurement",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        },
        "/api/user-types": {
            "get": {
                "tags": [
                    "User Types"
                ],
                "summary": "Get all user types",
                "description": "Returns a list of all user types.",
                "operationId": "getUserTypes",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server Error"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegisterRequest": {
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "password"
                ],
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "minLength": 8
                    },
                    "age": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "number",
                        "format": "float"
                    },
                    "weight": {
                        "type": "integer"
                    },
                    "physicalActivityLevel": {
                        "type": "integer"
                    },
                    "goals": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "nullable": true
                    },
                    "registrationType": {
                        "type": "string"
                    },
                    "userType": {
                        "type": "string"
                    }
                },
                "type": "object"
            }
        }
    }
}